// Code generated by github.com/dashotv/golem. DO NOT EDIT.
import { Message, Response, towerClient } from '.';

export interface MessagesIndexRequest {
  page: number;
  limit: number;
}
export interface MessagesIndexResponse extends Response {
  result: Message[];
  total: number;
}
export const MessagesIndex = async (params: MessagesIndexRequest) => {
  const response = await towerClient.get(`/messages/?page=${params.page}&limit=${params.limit}`);

  if (!response.data) {
    throw new Error('response empty?');
  }

  if (response.data.error) {
    if (response.data.message) {
      throw new Error(response.data.message);
    }
    throw new Error('unknown error');
  }

  return response.data as MessagesIndexResponse;
};

export interface MessagesCreateRequest {
  message: Message;
}
export interface MessagesCreateResponse extends Response {
  result: Message;
}
export const MessagesCreate = async (params: MessagesCreateRequest) => {
  const response = await towerClient.post(`/messages/?`, params.message);

  if (!response.data) {
    throw new Error('response empty?');
  }

  if (response.data.error) {
    if (response.data.message) {
      throw new Error(response.data.message);
    }
    throw new Error('unknown error');
  }

  return response.data as MessagesCreateResponse;
};
