// Code generated by github.com/dashotv/golem. DO NOT EDIT.
import { Response, towerClient } from '.';

export interface PlexSearchRequest {
  query: string;
  section: string;
}

export interface PlexCollectionsIndexRequest {
  section: string;
}

export interface PlexCollectionsShowRequest {
  section: string;
  ratingKey: string;
}

export interface PlexMetadataRequest {
  key: string;
}

export interface PlexPlayRequest {
  ratingKey: string;
  player: string;
}

export interface PlexStopRequest {
  session: string;
}

export const PlexAuth = async () => {
  const response = await towerClient.get(`/plex/auth?`);
  return response.data as Response;
};
export const PlexIndex = async () => {
  const response = await towerClient.get(`/plex/?`);
  return response.data as Response;
};
export const PlexUpdate = async () => {
  const response = await towerClient.get(`/plex/update?`);
  return response.data as Response;
};
export const PlexSearch = async (params: PlexSearchRequest) => {
  const response = await towerClient.get(`/plex/search?query=${params.query}&section=${params.section}`);
  return response.data as Response;
};
export const PlexLibraries = async () => {
  const response = await towerClient.get(`/plex/libraries?`);
  return response.data as Response;
};
export const PlexCollectionsIndex = async (params: PlexCollectionsIndexRequest) => {
  const response = await towerClient.get(`/plex/libraries/${params.section}/collections?`);
  return response.data as Response;
};
export const PlexCollectionsShow = async (params: PlexCollectionsShowRequest) => {
  const response = await towerClient.get(`/plex/libraries/${params.section}/collections/${params.ratingKey}?`);
  return response.data as Response;
};
export const PlexMetadata = async (params: PlexMetadataRequest) => {
  const response = await towerClient.get(`/plex/metadata/${params.key}?`);
  return response.data as Response;
};
export const PlexClients = async () => {
  const response = await towerClient.get(`/plex/clients?`);
  return response.data as Response;
};
export const PlexDevices = async () => {
  const response = await towerClient.get(`/plex/devices?`);
  return response.data as Response;
};
export const PlexResources = async () => {
  const response = await towerClient.get(`/plex/resources?`);
  return response.data as Response;
};
export const PlexPlay = async (params: PlexPlayRequest) => {
  const response = await towerClient.get(`/plex/play?ratingKey=${params.ratingKey}&player=${params.player}`);
  return response.data as Response;
};
export const PlexSessions = async () => {
  const response = await towerClient.get(`/plex/sessions?`);
  return response.data as Response;
};
export const PlexStop = async (params: PlexStopRequest) => {
  const response = await towerClient.get(`/plex/stop?session=${params.session}`);
  return response.data as Response;
};
