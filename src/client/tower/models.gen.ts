// Code generated by github.com/dashotv/golem. DO NOT EDIT.

export interface Collection {
  id?: string;
  created_at?: string;
  updated_at?: string;

  name?: string;
  library?: string;
  rating_key?: string;
  synced_at?: string;
  media?: CollectionMedia[];
}
export interface CollectionMedia {
  rating_key?: string;
  title?: string;
}
export interface Combination {
  id?: string;
  created_at?: string;
  updated_at?: string;

  name?: string;
  collections?: string[];
}
export interface Download {
  id?: string;
  created_at?: string;
  updated_at?: string;

  medium_id?: string;
  auto?: boolean;
  multi?: boolean;
  force?: boolean;
  url?: string;
  release_id?: string;
  thash?: string;
  selected?: string;
  status?: string;
  files?: DownloadFile[];
  medium?: Medium;
}
export interface DownloadFile {
  id?: string;
  medium_id?: string;
  medium?: Medium;
  num?: number;
  torrent_file?: TorrentFile;
}
export interface Episode {
  id?: string;
  created_at?: string;
  updated_at?: string;

  type?: string;
  series_id?: string;
  source_id?: string;
  title?: string;
  description?: string;
  directory?: string;
  search?: string;
  season_number?: number;
  episode_number?: number;
  absolute_number?: number;
  downloaded?: boolean;
  completed?: boolean;
  skipped?: boolean;
  missing?: string;
  release_date?: string;
  paths?: Path[];
  cover?: string;
  background?: string;
  watched?: boolean;
  watched_any?: boolean;
  active?: boolean;
  favorite?: boolean;
  unwatched?: number;
  display?: string;
  kind?: string;
  source?: string;
}
export interface Feed {
  id?: string;
  created_at?: string;
  updated_at?: string;

  name?: string;
  url?: string;
  source?: string;
  type?: string;
  active?: boolean;
  processed?: string;
}
export interface File {
  id?: string;
  created_at?: string;
  updated_at?: string;

  type?: string;
  path?: string;
  size?: number;
  modified_at?: number;
  medium_id?: string;
}
export interface Medium {
  id?: string;
  created_at?: string;
  updated_at?: string;

  type?: string;
  kind?: string;
  source?: string;
  source_id?: string;
  imdb_id?: string;
  title?: string;
  description?: string;
  display?: string;
  directory?: string;
  search?: string;
  search_params?: SearchParams;
  active?: boolean;
  downloaded?: boolean;
  completed?: boolean;
  skipped?: boolean;
  watched?: boolean;
  broken?: boolean;
  favorite?: boolean;
  unwatched?: number;
  release_date?: string;
  paths?: Path[];
  cover?: string;
  background?: string;
  series_id?: string;
  season_number?: number;
  episode_number?: number;
  absolute_number?: number;
}
export interface Message {
  id?: string;
  created_at?: string;
  updated_at?: string;

  level?: string;
  facility?: string;
  message?: string;
}
export interface Minion {
  id?: string;
  created_at?: string;
  updated_at?: string;

  kind?: string;
  args?: string;
  status?: string;
  queue?: string;
  attempts?: MinionAttempt[];
}
export interface MinionAttempt {
  started_at?: string;
  duration?: number;
  status?: string;
  error?: string;
  stacktrace?: string[];
}
export interface Movie {
  id?: string;
  created_at?: string;
  updated_at?: string;

  type?: string;
  kind?: string;
  source?: string;
  source_id?: string;
  imdb_id?: string;
  title?: string;
  description?: string;
  slug?: string;
  text?: string[];
  display?: string;
  directory?: string;
  search?: string;
  search_params?: SearchParams;
  active?: boolean;
  downloaded?: boolean;
  completed?: boolean;
  skipped?: boolean;
  watched?: boolean;
  broken?: boolean;
  favorite?: boolean;
  release_date?: string;
  paths?: Path[];
  cover?: string;
  background?: string;
}
export interface NzbgetPayload {
  id?: string;
  name?: string;
  category?: string;
  dir?: string;
  final_dir?: string;
  file?: string;
  status?: string;
}
export interface Path {
  id?: string;
  type?: string;
  remote?: string;
  local?: string;
  extension?: string;
  size?: number;
  resolution?: number;
  bitrate?: number;
  checksum?: string;
  updated_at?: string;
}
export interface Pin {
  id?: string;
  created_at?: string;
  updated_at?: string;

  pin?: number;
  code?: string;
  token?: string;
  product?: string;
  identifier?: string;
}
export interface Release {
  id?: string;
  created_at?: string;
  updated_at?: string;

  type?: string;
  source?: string;
  raw?: string;
  title?: string;
  description?: string;
  size?: string;
  view?: string;
  download?: string;
  infohash?: string;
  name?: string;
  season?: number;
  episode?: number;
  volume?: number;
  checksum?: string;
  group?: string;
  author?: string;
  verified?: boolean;
  widescreen?: boolean;
  uncensored?: boolean;
  bluray?: boolean;
  nzb?: boolean;
  resolution?: string;
  encoding?: string;
  quality?: string;
  published_at?: string;
}
export interface Request {
  id?: string;
  created_at?: string;
  updated_at?: string;

  title?: string;
  user?: string;
  type?: string;
  source?: string;
  source_id?: string;
  status?: string;
}
export interface SearchParams {
  type?: string;
  verified?: boolean;
  group?: string;
  author?: string;
  resolution?: number;
  source?: string;
  uncensored?: boolean;
  bluray?: boolean;
}
export interface Series {
  id?: string;
  created_at?: string;
  updated_at?: string;

  type?: string;
  kind?: string;
  source?: string;
  source_id?: string;
  imdb_id?: string;
  title?: string;
  description?: string;
  slug?: string;
  text?: string[];
  display?: string;
  directory?: string;
  search?: string;
  search_params?: SearchParams;
  status?: string;
  active?: boolean;
  downloaded?: boolean;
  completed?: boolean;
  skipped?: boolean;
  watched?: boolean;
  broken?: boolean;
  favorite?: boolean;
  unwatched?: number;
  unwatched_all?: number;
  release_date?: string;
  paths?: Path[];
  cover?: string;
  background?: string;
  currentSeason?: number;
  seasons?: number[];
  episodes?: Episode[];
  watches?: Watch[];
}
export interface TorrentFile {
  id?: number;
  is_send?: boolean;
  name?: string;
  priority?: number;
  progress?: number;
  size?: number;
}
export interface User {
  id?: string;
  created_at?: string;
  updated_at?: string;

  name?: string;
  email?: string;
  token?: string;
  thumb?: string;
  home?: boolean;
  admin?: boolean;
}
export interface Watch {
  id?: string;
  created_at?: string;
  updated_at?: string;

  username?: string;
  player?: string;
  watched_at?: string;
  medium_id?: string;
  medium?: Medium;
}
