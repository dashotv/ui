// Code generated by github.com/dashotv/golem. DO NOT EDIT.
import { Response, scryClient } from '.';
import * as search from './search';

export interface MediaIndexRequest {
  start: number;
  limit: number;
  type: string;
  name: string;
  display: string;
  title: string;
  source: string;
  source_id: string;
  season: number;
  episode: number;
  absolute: number;
  downloaded: string;
  completed: string;
  skipped: string;
}
export interface MediaIndexResponse extends Response {
  result: search.MediaSearchResponse;
  total: number;
}
export const MediaIndex = async (params: MediaIndexRequest) => {
  const response = await scryClient.get(
    `/media/?start=${params.start}&limit=${params.limit}&type=${params.type}&name=${params.name}&display=${params.display}&title=${params.title}&source=${params.source}&source_id=${params.source_id}&season=${params.season}&episode=${params.episode}&absolute=${params.absolute}&downloaded=${params.downloaded}&completed=${params.completed}&skipped=${params.skipped}`,
  );

  if (!response.data) {
    throw new Error('response empty?');
  }

  if (response.data.error) {
    if (response.data.message) {
      throw new Error(response.data.message);
    }
    throw new Error('unknown error');
  }

  return response.data as MediaIndexResponse;
};
